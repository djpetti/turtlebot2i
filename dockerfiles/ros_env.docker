# This Dockerfile is meant to replicate the environment on the robot, and is used for building the robot code.
# As such, it is optimized for cache efficiency but not size.

# Common dependency container.
FROM ubuntu:16.04 AS common

# Use same sources as the actual robot.
ADD turtlebot_sources.list /etc/apt/sources.list

# Add a turtlebot user.
RUN useradd -m turtlebot

# Clone the realsense library.
RUN apt-get update && apt-get install -y git && rm -rf /var/lib/apt/lists/*
RUN git clone https://github.com/IntelRealSense/librealsense.git \
    -b v2.40.0 /tmp/librealsense

# Set apt to prefer ROS packages.
ADD roles/turtlebot/files/preferences /etc/apt/preferences

# Set up the ROS environment.
ADD roles/turtlebot/files/setup_ros_env.sh .
RUN ./setup_ros_env.sh && rm setup_ros_env.sh

# Container for running rviz.
FROM common as rviz

# Add the rviz script.
ADD scripts/rviz.sh rviz.sh

# Container for building the code.
FROM common as builder

# Set up SSH for CLion.
RUN apt-get update && apt-get install -y ssh && rm -rf /var/lib/apt/lists/*
RUN ( \
    echo 'LogLevel DEBUG2'; \
    echo 'PermitRootLogin yes'; \
    echo 'PasswordAuthentication yes'; \
    echo 'Subsystem sftp /usr/lib/openssh/sftp-server'; \
  ) > /etc/ssh/sshd_config_test_clion \
  && mkdir /run/sshd

RUN yes password | passwd turtlebot

# Copy the wrapper script for cmake.
ADD scripts/catkin_cmake.sh /usr/bin/catkin_cmake

CMD ["/usr/sbin/sshd", "-D", "-e", "-f", "/etc/ssh/sshd_config_test_clion"]
